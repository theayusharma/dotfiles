$mainMod = SUPER
$SCRIPTS = ~/.config/broconfig/scripts 
$LockScreen = hyprlock

cursor {

no_hardware_cursors = true

}
# exec-once = swayidle timeout 300 'gtklock -f -c 000000' timeout 330 'hyprctl dispatch dpms off' resume 'hyprctl dispatch dpms on' timeout 1800 'systemctl suspend'
# exec-once = swayidle timeout 120 'gtklock -f -c 000000' timeout 150 'hyprctl dispatch dpms off' resume 'hyprctl dispatch dpms on' timeout 180 'systemctl suspend'
exec-once = hypridle

# from end4d 
#bindl = Alt ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle # [hidden]
#bindl = Super ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle # [hidden]
#bindl = ,XF86AudioMute, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0% # [hidden]
bindl = Super+Shift,M, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0% # [hidden]
bindle=, XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+ # [hidden]
bindle=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- # [hidden]
bindle = $mainMod,INSERT , exec, $SCRIPTS/screenshotBro.sh # Take a screenshot
bindle = $mainMod,XF86Calculator , exec, $SCRIPTS/screenshotSelect.sh


#from ml4w
bindle = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle # Toggle mute
bindle = , XF86MonBrightnessUp, exec, brightnessctl -q s +5% # Increase brightness by 10%

bindle = , XF86MonBrightnessDown, exec, brightnessctl -q s 5%- # Reduce brightness by 10%

bindm = $mainMod, mouse:272, movewindow # Move window with the mouse
bindm = $mainMod, mouse:273, resizewindow # Resize window with the mouse
bind = $mainMod SHIFT, right, resizeactive, 100 0 # Increase window width with keyboard
bind = $mainMod SHIFT, left, resizeactive, -100 0 # Reduce window width with keyboard
bind = $mainMod SHIFT, down, resizeactive, 0 100 # Increase window height with keyboard
bind = $mainMod SHIFT, up, resizeactive, 0 -100 # Reduce window height with keyboard

bind = $mainMod, G, exec, blueberry
#bind = $mainMod, G, togglegroup # Toggle window group
bind = $mainMod, K, swapsplit # Swapsplit




#ajkfndjksnfkajnf
bind = $mainMod, B, exec, brave
bind = $mainMod, T, exec, thorium-browser
bind = $mainMod SHIFT, G, exec, pkill waybar
bind = $mainMod CTRL, B, exec, $SCRIPTS/reload-waybar.sh # Reload Waybari
bind = $mainMod CTRL, M, exec, $SCRIPTS/onlyExternalMonitor.sh # external monitor only
bind = $mainMod CTRL, P, exec, $SCRIPTS/powersavermode.sh # powersaverrrrrr
bind = $mainMod SHIFT, D, exec, bash -c 'grim /tmp/snap.png && swappy --file /tmp/snap.png'
bind = $mainMod CTRL, D, exec, bash $SCRIPTS/screenshotSelectPaint.sh
bind = $mainMod, V, exec, $SCRIPTS/cliphist.sh # Open clipboard manager
bind = $mainMod SHIFT, H, exec, $SCRIPTS/hyprshade.sh # Toggle screenshader
bind = $mainMod SHIFT, B, exec, $SCRIPTS/lastBluetoothConn.sh # last bluetooth connect
bind = $mainMod CTRL, G, exec, $SCRIPTS/sudo/turboFreqOff.sh powersave | $SCRIPTS/sudo/turboFreqOff.sh performance
bind = $mainMod, W, exec, $SCRIPTS/activeApps.sh # last bluetooth connect
bind = $mainMod, L, exec, $LockScreen
#bindle = ,XF86Favorites, exec, systemctl suspend
bindle = ,XF86Favorites, exec, systemctl suspend

#card1 is igpu amd , card0 is dgpu nvidia, if exeternal monitor then only use card0 as mux is not present
#env = AQ_DRM_DEVICES,/dev/dri/card1:/dev/dri/card0
# $OCR4Linux = ~/.config/OCR4Linux/OCR4Linux.sh  
bind = $mainMod SHIFT, R, exec, $SCRIPTS/textscreenshottess.sh


bind = $mainMod, o, exec, env XDG_CURRENT_DESKTOP=gnome gnome-control-center
# bind = $mainMod, o, exec, gnome-system-monitor

bind = $mainMod, Tab, workspace, m+1 # Open next workspace
bind = $mainMod SHIFT, Tab, workspace, m-1 # Open previous workspace

bind = $mainMod, D, fullscreen, 0 # Set active window to fullscreen
bind = $mainMod, A, exec, pkill rofi || rofi -show drun -theme ~/.config/rofi/config-applauncher-spotlight.rasi #anyrun stopped working so spotlight thing
bind = $mainMod SHIFT, S, movetoworkspacesilent, special
bind = $mainMod, S, togglespecialworkspace
# bind = $mainMod SHIFT, togglespecialworkspace

# bind = $mainMod, R, exec, smile || pkill smile
bind = $mainMod, R, exec, bemoji || pkill bemoji
bind = $mainMod SHIFT, E, exec, nautilus --new-window
bind = $mainMod, E, exec, kitty --single-instance -e yazi

# try android studio emulator
# windowrulev2 = float,class:(Emulator)
# windowrulev2 = pin, class:(Emulator)
# windowrulev2 = move 100%-w-40 90,class:(it.mijorus.smile)

windowrulev2 = float,class:^(Emulator)$
windowrulev2 = pin,class:^(Emulator)$
windowrulev2 = size 420 820,class:^(Emulator)$

windowrulev2 = move 1459 142,class:^(Emulator)$
# windowrulev2 = move 100%-w-40 50%-h/2,class:^(Emulator)$
#

# Emoji Picker Smile
windowrulev2 = float,class:(it.mijorus.smile)
windowrulev2 = pin, class:(it.mijorus.smile)
windowrulev2 = move 100%-w-40 90,class:(it.mijorus.smile)
#windowrulev2 = keepaspectratio, title:Gnome-control-center
windowrulev2 = move 50% 50%,title:Gnome-control-center 
windowrulev2 = size 60%, title:Gnome-control-center
windowrulev2 = float, class:(org.gnome.Settings)
windowrulev2 = pin, title:Gnome-control-center
windowrulev2 = float, class:^(xdg-desktop-portal-gtk)$
#windowrulev2 = float, class:^(xdg-desktop-portal-hyprland)$
# Force float Google sign-in popups in Brave

# windowrulev2 = float, class:^(Brave)$, title:^(Untitled)(.*)$
#windowrulev2 = float, class:^(code)$, title:^(Open Folder.*)$
#windowrulev2 = float, class:^(code)$, title:^(Save As.*)$
# windowrulev2 = float, title:^(Open Folder.*)$
# windowrulev2 = float, title:^(Save As.*)$
# windowrulev2 = float, title:^(Open File.*)$
# windowrulev2 = float, class:^(brave)$, title:^(.*Google accounts.*)$

# windowrulev2 = float, class:^(brave-browser)$, title:.*(Google|Sign).*
# windowrulev2 = move center, class:^(brave-browser)$, title:.*(Google|Sign).*
# windowrulev2 = size 800 600, class:^(brave-browser)$, title:.*(Google|Sign).*
# windowrule = float, title:^(.*title: Google Account.*)$ 
# windowrule = size 60% 50% ,title:^(Sign In - Google Accounts — Brave)$ 
# windowrule = center,title:^(Sign In - Google Accounts — Brave)$ 
# windowrule = float,title:^(.*popup.*)$
# windowrule=float,^(Sign In)$


# Dialogs
windowrulev2=float,title:^(Open File)(.*)$
windowrulev2=float,title:^(Select a File)(.*)$
windowrulev2=float,title:^(Choose wallpaper)(.*)$
windowrulev2=float,title:^(Open Folder)(.*)$
windowrulev2=float,title:^(Save As)(.*)$
windowrulev2=float,title:^(Library)(.*)$
windowrulev2=float,title:^(File Upload)(.*)$

# Pavucontrol floating
windowrulev2 = float,class:(.*org.pulseaudio.pavucontrol.*)
windowrulev2 = size 700 600,class:(.*org.pulseaudio.pavucontrol.*)
windowrulev2 = center,class:(.*org.pulseaudio.pavucontrol.*)
windowrulev2 = pin,class:(.*org.pulseaudio.pavucontrol.*)

windowrulev2 = float,class:(.*blueman-manager.*)
windowrulev2 = size 700 600,class:(.*blueman-manager.*)
windowrulev2 = center,class:(.*blueman-manager.*)
windowrulev2 = pin,class:(.*blueman-manager.*)
# nm-connection-editor floating
windowrulev2 = float,class:(.*nm-connection-editor.*)
windowrulev2 = size 700 600,class:(.*nm-connection-editor.*)
windowrulev2 = center,class:(.*nm-connection-editor.*)
windowrulev2 = pin,class:(.*nm-connection-editor.*)


# ######## Layer rules ########
layerrule = xray 1, .*
# layerrule = noanim, .*
layerrule = noanim, walker
layerrule = noanim, selection
layerrule = noanim, overview
layerrule = noanim, anyraun
layerrule = noanim, indicator.*
layerrule = noanim, osk
layerrule = noanim, hyprpicker
#layerrule = blur, shell:*
layerrule = ignorealpha 0.6, shell:*

layerrule = noanim, noanim
# layerrule = blur, gtk-layer-shell
layerrule = ignorezero, gtk-layer-shell
# layerrule = blur, launcher
layerrule = ignorealpha 0.5, launcher
# layerrule = blur, notifications
layerrule = ignorealpha 0.69, notifications





# Picture-in-Picture
windowrulev2 = keepaspectratio, title:^(Picture(-| )in(-| )[Pp]icture)$
windowrulev2 = move 60.7% 60.6%,title:^(Picture(-| )in(-| )[Pp]icture)$ 
windowrulev2 = size 39%, title:^(Picture(-| )in(-| )[Pp]icture)$
windowrulev2 = float, title:^(Picture(-| )in(-| )[Pp]icture)$
windowrulev2 = pin, title:^(Picture(-| )in(-| )[Pp]icture)$

# ######## Window rules ########
# windowrule = noblur,.*
#windowrule = opacity 0.89 override 0.89 override, .* # Applies transparency to EVERY WINDOW
# windowrulev2 = float, title:^(blueberry)$
# windowrule = float, ^(steam)$
# windowrule = float, ^(guifetch)$ # FlafyDev/guifetch
# windowrulev2 = tile, class:(dev.warp.Warp)
# windowrulev2 = float, title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
# windowrule = center, title:^(Open File)(.*)$
# windowrule = center, title:^(Select a File)(.*)$
# windowrule = center, title:^(Choose wallpaper)(.*)$
# windowrule = center, title:^(Open Folder)(.*)$
# windowrule = center, title:^(Save As)(.*)$
# windowrule = center, title:^(Library)(.*)$
# windowrule = center, title:^(File Upload)(.*)$

# System Mission Center
windowrulev2 = float, class:(io.missioncenter.MissionCenter)
windowrulev2 = pin, class:(io.missioncenter.MissionCenter)
windowrulev2 = center, class:(io.missioncenter.MissionCenter)
windowrulev2 = size 900 600, class:(io.missioncenter.MissionCenter)

# System Mission Center Preference Window
windowrulev2 = float, class:(missioncenter), title:^(Preferences)$
windowrulev2 = pin, class:(missioncenter), title:^(Preferences)$
windowrulev2 = center, class:(missioncenter), title:^(Preferences)$

# float blueberry
# For Blueberry main window
windowrulev2 = float, class:^(blueberry\.py)$
windowrulev2 = center, class:^(blueberry\.py)$
windowrulev2 = pin, class:^(blueberry\.py)$
# windowrulev2 = focus, class:^(blueberry\.py)$
windowrulev2 = size 700 500, class:^(blueberry\.py)$
# General floating
windowrulev2 = float,class:(dotfiles-floating)
windowrulev2 = size 1000 700,class:(dotfiles-floating)
windowrulev2 = center,class:(dotfiles-floating)
windowrulev2 = pin, class:(dotfiles-floating)

# XDG Desktop Portal
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland

# QT
env = QT_QPA_PLATFORM,wayland;xcb
env = QT_QPA_PLATFORMTHEME,qt6ct
env = QT_QPA_PLATFORMTHEME,qt5ct
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_AUTO_SCREEN_SCALE_FACTOR,1

# GDK
env = GDK_SCALE,1

# Toolkit Backend
env = GDK_BACKEND,wayland,*
env = CLUTTER_BACKEND,wayland



# No shadow for tiled windows
windowrulev2 = noshadow,floating:0

# decoration {
#     blur {
#         enabled = false
#     }
# }
input {
    kb_layout = us
    numlock_by_default = true
    repeat_delay = 250
    repeat_rate = 35

    touchpad {
        natural_scroll = yes
        disable_while_typing = true
        clickfinger_behavior = true
        scroll_factor = 0.5
    }
    special_fallthrough = true
    follow_mouse = 1
}

binds {
    # focus_window_on_workspace_c# For Auto-run stuff see execs.confhange = true
    scroll_event_delay = 0
}




misc {
    vfr = 1
    vrr = 1
    animate_manual_resizes = false
    animate_mouse_windowdragging = false
    enable_swallow = false
    swallow_regex = (foot|kitty|allacritty|Alacritty)
    
    disable_hyprland_logo = true
    force_default_wallpaper = 0
    new_window_takes_over_fullscreen = 2
    allow_session_lock_restore = true
    
    initial_workspace_tracking = false
}
#kde connect cool things
windowrule=opacity 1, title:KDE Connect Daemon
windowrule=noblur, title:KDE Connect Daemon
windowrule=noborder, title:KDE Connect Daemon
windowrule=noshadow, title:KDE Connect Daemon
windowrule=noanim, title:KDE Connect Daemon
windowrule=nofocus, title:KDE Connect Daemon
windowrule=suppressevent fullscreen, title:KDE Connect Daemon
windowrule=float, title:KDE Connect Daemon
windowrule=pin, title:KDE Connect Daemon
# windowrule=minsize $your $resolution, title:KDE Connect Daemon
windowrulev2 = minsize 1920 1080, title:^KDE Connect Daemon$
# windowrule=move 0 0, title:KDE Connect Daemon

# play/pause audio
bind = , XF86AudioPlay, exec, playerctl play-pause

# hide pip window (send to scratchpad)
# bind = , XF86AudioStop, exec, hyprctl dispatch movetoworkspacesilent special
#
 # show pip window back (toggle from scratchpad)
# bind = , XF86AudioStop, exec, hyprctl dispatch togglespecialworkspace

# yt back 5 sec
bind = , XF86AudioPrev, exec, playerctl position 5-

# yt forward 5 sec
bind = , XF86AudioNext, exec, playerctl position 5+

workspace = w[tv1], gapsout:0, gapsin:0
workspace = f[1], gapsout:0, gapsin:0
windowrulev2 = bordersize 0, floating:0, onworkspace:w[tv1]
windowrulev2 = rounding 0, floating:0, onworkspace:w[tv1]
windowrulev2 = bordersize 0, floating:0, onworkspace:f[1]
windowrulev2 = rounding 0, floating:0, onworkspace:f[1]
